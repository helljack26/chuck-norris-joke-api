{"version":3,"sources":["components/RadioGroup/RadioGroup.module.scss","components/JokeBlockItem/JokeBlockItem.module.scss","components/AddToFavoriteButton/AddToFavoriteButton.module.scss","components/RadioGroupCategories/RadioGroupCategories.module.scss","components/MainHeader/MainHeader.module.css","components/MainButton/MainButton.module.css","store/chuckApi/actions.js","store/index.js","store/chuckApi/reducer.js","components/RadioGroupCategories/index.js","components/RadioGroupCategories/RadioGroupCategories.jsx","components/RadioGroup/index.js","components/RadioGroup/RadioGroup.jsx","components/MainHeader/index.js","components/MainHeader/MainHeader.jsx","components/MainButton/index.js","components/MainButton/MainButton.jsx","components/AddToFavoriteButton/index.js","components/AddToFavoriteButton/AddToFavoriteButton.jsx","components/JokeBlockItem/JokeBlockItem.jsx","components/JokeBlockItem/index.js","components/MainJokesBlock/index.js","components/MainJokesBlock/MainJokesBlock.jsx","components/Main/index.js","components/Main/Main.jsx","components/FavoriteHeaderDesktop/index.js","components/FavoriteHeaderDesktop/FavoriteHeaderDesktop.jsx","components/FavoriteHeaderTablet/index.js","components/FavoriteHeaderTablet/FavoriteHeaderTablet.jsx","components/FavoriteHeader/index.js","components/FavoriteHeader/FavoriteHeader.jsx","components/FavoriteBlock/index.js","components/FavoriteBlock/FavoriteBlock.jsx","components/Favorite/Favorite.jsx","components/Favorite/index.js","App.js","index.js"],"names":["module","exports","SET_CATEGORIES_LIST","SET_JOKE_LIST","UPDATE_SEARCH_BY_INPUT","UPDATE_CATEGORY_JOKE","SET_RADIO_SEARCH_STATE","SET_FAVORITE_LIST_STATE","SET_FAVORITE_JOKE_LIST","setJokeFromApi","payload","type","updateSearchByInput","updateCategoryJoke","setRadioSearchState","setFavoriteListState","setFavoriteJokeList","getCategoriesFromApi","dispatch","fetch","then","response","json","data","getJokeListFromApi","getState","state","searchCategory","chuckApi","searchByInput","url","random","category","byInput","isRandom","Boolean","isByInput","total","id","error","checkedData","checkInFavoriteList","results","favoriteJokeList","modifiedResults","undefined","result","map","item","categories","icon_url","updated_at","value","inFavorite","foundJoke","find","jokes","checkInStateFavoriteList","dispathAll","jokeList","localStorage","setItem","JSON","stringify","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","categoriesList","radioSearchState","favoriteListStateBtn","action","applyMiddleware","thunk","RadioGroupCategories","useDispatch","useSelector","useEffect","initial","className","style","categoriesBlock","key","categoriesBtn","active","onClick","RadioGroup","useState","openCategories","setOpenCategories","radioGroup","radioGroupItem","radioBtn","name","defaultChecked","htmlFor","displayNone","displayBlock","required","searchInput","placeholder","onKeyPress","event","target","preventDefault","handleKeyPress","onInput","MainHeader","mainHeader","src","alt","logo","description","MainButton","isExistSearch","length","isSearchMin","isRadioSearchOpen","isInputCanSendRequest","isRadioSearchClosed","mainButton","AddToFavoriteButton","favoriteBlockStyle","setType","addIconFavoriteBtn","addIconBtn","joke","removeFromFavoriteList","notInFavorite","isExistInFavoriteList","isExistInJokeList","existOnlyInJokeList","existOnlyInFavoriteJokeList","newInFavoriteItem","unshift","addToFavoriteList","countLastUpdate","date","lastUpdate","Date","slice","replace","now","difference","getTime","days","Math","abs","ceil","JokeBlockItem","jokeData","isCategoriesLength","jokeBlockItem","jokeBlockFavoriteItem","icon","idBlock","href","linkText","linkIcon","text","jokeFooter","MainJokesBlock","isJokeList","Main","FavoriteHeaderDesktop","FavoriteHeaderTablet","isOpenFavoriteList","isClosedFavoriteList","FavoriteHeader","screenType","FavoriteBlock","isDesktop","favoriteContainerClass","favoriteJokeBlockClass","initialSetOnlyInFavoriteItem","localStorageFavoriteListJson","parse","getItem","filter","Favorite","isFavoriteList","console","log","cleanFavoriteList","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5710a6e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioGroup\":\"RadioGroup_radioGroup__RtmUZ\",\"radioGroupItem\":\"RadioGroup_radioGroupItem__zdha9\",\"radioBtn\":\"RadioGroup_radioBtn__EsthD\",\"categoryBlock\":\"RadioGroup_categoryBlock__2Rirg\",\"searchInput\":\"RadioGroup_searchInput__1X1NB\",\"displayNone\":\"RadioGroup_displayNone__Rykhe\",\"displayBlock\":\"RadioGroup_displayBlock__nGaZs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jokeBlockItem\":\"JokeBlockItem_jokeBlockItem__3TBFt\",\"jokeBlockFavoriteItem\":\"JokeBlockItem_jokeBlockFavoriteItem__3A9Lt\",\"icon\":\"JokeBlockItem_icon__ZagSH\",\"data\":\"JokeBlockItem_data__11KLk\",\"idBlock\":\"JokeBlockItem_idBlock__1KXRK\",\"id\":\"JokeBlockItem_id__3Arur\",\"linkText\":\"JokeBlockItem_linkText__fc5wd\",\"linkIcon\":\"JokeBlockItem_linkIcon__fvIrw\",\"text\":\"JokeBlockItem_text__280FL\",\"jokeFooter\":\"JokeBlockItem_jokeFooter__1Priv\",\"lastUpdate\":\"JokeBlockItem_lastUpdate__9cGq_\",\"categories\":\"JokeBlockItem_categories__1wAMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addIconBtn\":\"AddToFavoriteButton_addIconBtn__1v0ui\",\"addIconFavoriteBtn\":\"AddToFavoriteButton_addIconFavoriteBtn__21cZ6\",\"notInFavorite\":\"AddToFavoriteButton_notInFavorite__1ZT7K\",\"inFavorite\":\"AddToFavoriteButton_inFavorite__4S5ey\",\"addIcon\":\"AddToFavoriteButton_addIcon__2ca-w\",\"detailsBtn\":\"AddToFavoriteButton_detailsBtn__1YoLo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoriesBlock\":\"RadioGroupCategories_categoriesBlock__3e_Et\",\"categoriesBtn\":\"RadioGroupCategories_categoriesBtn__3IphQ\",\"active\":\"RadioGroupCategories_active__3W71I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"MainHeader_mainHeader__DfbOA\",\"logo\":\"MainHeader_logo__33coh\",\"hvr-buzz-out\":\"MainHeader_hvr-buzz-out__2DU-i\",\"description\":\"MainHeader_description__1e2mZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainButton\":\"MainButton_mainButton__3xE9d\"};","export const SET_CATEGORIES_LIST = 'SET_CATEGORIES_LIST';\r\nexport const SET_JOKE_LIST = 'SET_JOKE_LIST';\r\nexport const UPDATE_SEARCH_BY_INPUT = 'UPDATE_SEARCH_BY_INPUT';\r\nexport const UPDATE_CATEGORY_JOKE = 'UPDATE_CATEGORY_JOKE';\r\nexport const SET_RADIO_SEARCH_STATE = 'SET_RADIO_SEARCH_STATE';\r\nexport const SET_FAVORITE_LIST_STATE = 'SET_FAVORITE_LIST_STATE';\r\nexport const SET_FAVORITE_JOKE_LIST = 'SET_FAVORITE_JOKE_LIST';\r\n\r\nexport const setCategoriesFromApi = (payload) => {\r\n    return { type: SET_CATEGORIES_LIST, payload }\r\n}\r\nexport const setJokeFromApi = (payload) => {\r\n    return { type: SET_JOKE_LIST, payload }\r\n}\r\nexport const updateSearchByInput = (payload) => {\r\n    return { type: UPDATE_SEARCH_BY_INPUT, payload }\r\n}\r\nexport const updateCategoryJoke = (payload) => {\r\n    return { type: UPDATE_CATEGORY_JOKE, payload }\r\n}\r\nexport const setRadioSearchState = (payload) => {\r\n    return { type: SET_RADIO_SEARCH_STATE, payload }\r\n}\r\nexport const setFavoriteListState = (payload) => {\r\n    return { type: SET_FAVORITE_LIST_STATE, payload }\r\n}\r\nexport const setFavoriteJokeList = (payload) => {\r\n    return { type: SET_FAVORITE_JOKE_LIST, payload }\r\n}\r\n\r\nexport const getCategoriesFromApi = () => (dispatch) => {\r\n    const urlCategories = 'https://api.chucknorris.io/jokes/categories'\r\n    fetch(urlCategories)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            return (dispatch(setCategoriesFromApi(data))\r\n            )\r\n        })\r\n}\r\n\r\nexport const getJokeListFromApi = () => (dispatch, getState) => {\r\n    const state = getState();\r\n    const searchCategory = state.chuckApi.searchCategory;\r\n    const searchByInput = state.chuckApi.searchByInput;\r\n    const url = {\r\n        random: 'https://api.chucknorris.io/jokes/random',\r\n        category: `https://api.chucknorris.io/jokes/random?category=${searchCategory}`,\r\n        byInput: `https://api.chucknorris.io/jokes/search?query=${searchByInput}`\r\n    }\r\n    const isRandom = Boolean(!searchCategory && !searchByInput);\r\n    const isByInput = Boolean(searchByInput && !searchCategory);\r\n\r\n    const queryUrl = isRandom ? url.random : isByInput ? url.byInput : url.category\r\n    fetch(queryUrl)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            const isError = !!data.total === false && !!data.id === false && !!data.error === true;\r\n            if (!isError) {\r\n                const checkedData = checkInFavoriteList(data, dispatch, getState)\r\n                return (dispatch(setJokeFromApi([])), dispatch(setJokeFromApi(checkedData)))\r\n            }\r\n        })\r\n}\r\n\r\nexport const checkInFavoriteList = (results, dispatch, getState) => {\r\n    const state = getState();\r\n    const favoriteJokeList = state.chuckApi.favoriteJokeList;\r\n\r\n    const isResultsResult = results.result !== undefined;\r\n    const correctResults = isResultsResult === true ? results.result : [results];\r\n\r\n    const modifiedResults = correctResults.map((item) => {\r\n        const { categories, icon_url, id, updated_at, url, value } = item;\r\n        const modifiedResultsItem = {\r\n            categories: !categories ? '' : categories,\r\n            icon_url: !icon_url ? '' : icon_url,\r\n            id: id,\r\n            updated_at: updated_at,\r\n            url: url,\r\n            value: value,\r\n            inFavorite: false\r\n        }\r\n        return modifiedResultsItem\r\n    })\r\n    const checkInStateFavoriteList = (item) => {\r\n        const foundJoke = favoriteJokeList.find(jokes => jokes.id === item.id)\r\n        return Boolean(foundJoke) === true ? foundJoke : item;\r\n    }\r\n    const isFavoriteJokeList = Boolean(favoriteJokeList === null);\r\n\r\n    return isFavoriteJokeList ? modifiedResults :\r\n        (dispatch(setFavoriteJokeList(favoriteJokeList)),\r\n            modifiedResults.map((item) => checkInStateFavoriteList(item)))\r\n}\r\n\r\nexport const dispathAll = (jokeList, favoriteJokeList) => (dispatch) => {\r\n    return (localStorage.setItem('favoriteList', JSON.stringify(favoriteJokeList)),\r\n        dispatch(setJokeFromApi([])),\r\n        dispatch(setJokeFromApi(jokeList)),\r\n        dispatch(setFavoriteJokeList([])),\r\n        dispatch(setFavoriteJokeList(favoriteJokeList)))\r\n}\r\n\r\nexport const addToFavoriteList = (categories, icon_url, id, updated_at, url, value) => (dispatch, getState) => {\r\n    const state = getState();\r\n    const favoriteJokeList = state.chuckApi.favoriteJokeList;\r\n\r\n    const jokeList = state.chuckApi.jokeList;\r\n\r\n    const isExistInFavoriteList = Boolean(favoriteJokeList.find(joke => joke.id === id));\r\n    const isExistInJokeList = Boolean(jokeList.find(joke => joke.id === id));\r\n\r\n    const isExistInBothList = isExistInJokeList && isExistInFavoriteList;\r\n    const existOnlyInJokeList = isExistInJokeList && isExistInFavoriteList;\r\n    const existOnlyInFavoriteJokeList = isExistInJokeList && isExistInFavoriteList;\r\n\r\n    if (isExistInBothList) {\r\n        favoriteJokeList.find(joke => joke.id === id).inFavorite = true;\r\n        jokeList.find(joke => joke.id === id).inFavorite = true;\r\n    }\r\n    if (existOnlyInJokeList) {\r\n        jokeList.find(joke => joke.id === id).inFavorite = true;\r\n        const newInFavoriteItem = {\r\n            categories: categories,\r\n            icon_url: icon_url,\r\n            id: id,\r\n            updated_at: updated_at,\r\n            url: url,\r\n            value: value,\r\n            inFavorite: true\r\n        }\r\n        favoriteJokeList.unshift(newInFavoriteItem)\r\n    }\r\n    if (existOnlyInFavoriteJokeList) {\r\n        favoriteJokeList.find(joke => joke.id === id).inFavorite = true;\r\n    }\r\n    return dispatch(dispathAll(jokeList, favoriteJokeList))\r\n}\r\nexport const removeFromFavoriteList = (id) => (dispatch, getState) => {\r\n    const state = getState();\r\n    const favoriteJokeList = state.chuckApi.favoriteJokeList;\r\n    const jokeList = state.chuckApi.jokeList;\r\n\r\n    const isExistInJokeList = Boolean(jokeList.find(joke => joke.id === id))\r\n    if (isExistInJokeList) {\r\n        favoriteJokeList.find(joke => joke.id === id).inFavorite = false;\r\n        jokeList.find(joke => joke.id === id).inFavorite = false;\r\n    } else {\r\n        favoriteJokeList.find(joke => joke.id === id).inFavorite = false;\r\n    }\r\n    return dispatch(dispathAll(jokeList, favoriteJokeList))\r\n}\r\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { chuckApi } from './chuckApi/reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({ chuckApi }),\r\n  composeEnhancers(applyMiddleware(thunk)),\r\n);\r\n\r\nexport default store;\r\n","import {\r\n    SET_CATEGORIES_LIST,\r\n    SET_JOKE_LIST,\r\n    UPDATE_SEARCH_BY_INPUT,\r\n    UPDATE_CATEGORY_JOKE,\r\n    SET_RADIO_SEARCH_STATE,\r\n    SET_FAVORITE_LIST_STATE,\r\n    SET_FAVORITE_JOKE_LIST\r\n} from './actions';\r\n\r\nexport const chuckApi = (\r\n    state = {\r\n        categoriesList: [],\r\n        jokeList: [],\r\n        searchByInput: '',\r\n        searchCategory: '',\r\n        radioSearchState: false,\r\n        favoriteListStateBtn: false,\r\n        favoriteJokeList: []\r\n    }, action,) => {\r\n    switch (action.type) {\r\n        case SET_CATEGORIES_LIST:\r\n            return { ...state, categoriesList: action.payload };\r\n        case SET_JOKE_LIST:\r\n            return { ...state, jokeList: action.payload };\r\n        case UPDATE_SEARCH_BY_INPUT:\r\n            return { ...state, searchByInput: action.payload };\r\n        case UPDATE_CATEGORY_JOKE:\r\n            return { ...state, searchCategory: action.payload };\r\n        case SET_RADIO_SEARCH_STATE:\r\n            return { ...state, radioSearchState: action.payload };\r\n        case SET_FAVORITE_LIST_STATE:\r\n            return { ...state, favoriteListStateBtn: action.payload };\r\n        case SET_FAVORITE_JOKE_LIST:\r\n            return { ...state, favoriteJokeList: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n","import RadioGroupCategories from './RadioGroupCategories';\r\n\r\nexport default RadioGroupCategories;","import style from './RadioGroupCategories.module.scss'\r\nimport { getCategoriesFromApi, updateCategoryJoke } from '../../store/chuckApi/actions';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst RadioGroupCategories = () => {\r\n    const dispatch = useDispatch();\r\n    const categoriesList = useSelector(state => state.chuckApi.categoriesList)\r\n    const searchCategory = useSelector(state => state.chuckApi.searchCategory)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCategoriesFromApi())\r\n    }, [dispatch])\r\n\r\n    let initial = false\r\n    if (initial === false) {\r\n        initial = true;\r\n        updateCategoryJoke(categoriesList[0])\r\n    }\r\n\r\n    return (\r\n        <div className={style.categoriesBlock}>\r\n            {categoriesList.map((category, key) => {\r\n                return (\r\n                    <button type='button'\r\n                        key={key}\r\n                        className={`${style.categoriesBtn}  \r\n                        ${searchCategory === category ? style.active : null}`}\r\n                        onClick={() => dispatch(updateCategoryJoke(category))}\r\n                    >{category}</button>\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioGroupCategories;","import RadioGroup from './RadioGroup';\r\n\r\nexport default RadioGroup\r\n;","import style from './RadioGroup.module.scss'\r\nimport './RadioGroup.module.scss'\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateCategoryJoke, updateSearchByInput, setRadioSearchState } from '../../store/chuckApi/actions';\r\nimport RadioGroupCategories from '../RadioGroupCategories';\r\n\r\nconst handleKeyPress = (event) => {\r\n    if (event.key === 'Enter' && event.target.value !== '') {\r\n        event.preventDefault();\r\n    }\r\n}\r\nconst RadioGroup = () => {\r\n    const categoriesList = useSelector(state => state.chuckApi.categoriesList)\r\n    const radioSearchState = useSelector(state => state.chuckApi.radioSearchState)\r\n    const dispatch = useDispatch();\r\n    const [openCategories, setOpenCategories] = useState(false);\r\n\r\n    return <form className={style.radioGroup}>\r\n        {/* Random */}\r\n        <div className={style.radioGroupItem}>\r\n            <input type=\"radio\" className={style.radioBtn} id=\"random\"\r\n                name=\"contact\" value=\"random\" defaultChecked onClick={() => {\r\n                    return (setOpenCategories(false),\r\n                        dispatch(setRadioSearchState(false)),\r\n                        dispatch(updateCategoryJoke('')),\r\n                        dispatch(updateSearchByInput('')))\r\n                }} />\r\n            <label htmlFor=\"random\">Random</label>\r\n        </div>\r\n\r\n        {/* Categories */}\r\n        <div className={style.radioGroupItem}>\r\n            <input type=\"radio\" className={style.radioBtn} id=\"fromCategories\"\r\n                name=\"contact\" value=\"fromCategories\" onClick={() => {\r\n                    return (setOpenCategories(true),\r\n                        dispatch(setRadioSearchState(false)),\r\n                        dispatch(updateSearchByInput('')),\r\n                        dispatch(updateCategoryJoke(categoriesList[0])))\r\n                }} />\r\n            <label htmlFor=\"fromCategories\">From categories</label>\r\n        </div>\r\n        <div className={`${openCategories === false ? style.displayNone : style.displayBlock}`} >\r\n            <RadioGroupCategories />\r\n        </div>\r\n\r\n        {/* Search */}\r\n        <div className={style.radioGroupItem}>\r\n            <input type=\"radio\" className={style.radioBtn} id=\"search\"\r\n                name=\"contact\" value=\"search\" onClick={() => {\r\n                    return (\r\n                        setOpenCategories(false),\r\n                        dispatch(setRadioSearchState(true)),\r\n                        dispatch(updateCategoryJoke('')))\r\n                }} />\r\n            <label htmlFor=\"search\">Search</label>\r\n        </div>\r\n        <div className={`${radioSearchState === false ? style.displayNone : style.displayBlock}`}>\r\n            <input type=\"text\"\r\n                required=\"required\"\r\n                className={style.searchInput}\r\n                placeholder='Free text search...'\r\n                onKeyPress={(event) => handleKeyPress(event)}\r\n                onInput={(event) => dispatch(updateSearchByInput(event.target.value))}\r\n            />\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default RadioGroup;","import MainHeader from './MainHeader';\r\n\r\nexport default MainHeader;","import style from './MainHeader.module.css'\r\n\r\nconst MainHeader = () => {\r\n    return (\r\n        <div className={style.mainHeader}>\r\n            <img src=\"./img/icon/chucknorris_logo.png\" alt=\"Logo\" className={style.logo} />\r\n            <div>\r\n                <h1>Hey!</h1>\r\n                <p className={style.description}>Let's try to find a joke for you:</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainHeader;","import MainButton from './MainButton';\r\n\r\nexport default MainButton;","import style from './MainButton.module.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getJokeListFromApi } from '../../store/chuckApi/actions';\r\n\r\nconst MainButton = () => {\r\n    const dispatch = useDispatch();\r\n    const radioSearchState = useSelector(state => state.chuckApi.radioSearchState)\r\n    const searchByInput = useSelector(state => state.chuckApi.searchByInput);\r\n\r\n    const isExistSearch = searchByInput ? searchByInput.length : null;\r\n    const isSearchMin = Boolean(isExistSearch < 3);\r\n    const isRadioSearchOpen = Boolean(radioSearchState);\r\n    const isInputCanSendRequest = isSearchMin === false && isRadioSearchOpen === true;\r\n    const isRadioSearchClosed = isRadioSearchOpen === false;\r\n\r\n    return <button type='button' className={style.mainButton}\r\n        onClick={() => isInputCanSendRequest ?\r\n            dispatch(getJokeListFromApi())\r\n            :\r\n            isRadioSearchClosed ? dispatch(getJokeListFromApi()) : null\r\n        }\r\n    >Get a joke</button>\r\n\r\n}\r\n\r\nexport default MainButton;","import AddToFavoriteButton from './AddToFavoriteButton';\r\n\r\nexport default AddToFavoriteButton;","import { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport style from './AddToFavoriteButton.module.scss'\r\nimport { addToFavoriteList, removeFromFavoriteList } from '../../store/chuckApi/actions';\r\n\r\nconst AddToFavoriteButton = ({ categories, icon_url, id, updated_at, url, inFavorite = undefined, value, favoriteBlockStyle }) => {\r\n    const dispatch = useDispatch();\r\n    const [type, setType] = useState()\r\n    useEffect(() => {\r\n        return inFavorite !== undefined ? setType(inFavorite) : null;\r\n    }, [setType, inFavorite])\r\n\r\n    return type === true ?\r\n        <button type='button' className={!favoriteBlockStyle ? style.addIconBtn : style.addIconFavoriteBtn}>\r\n            <img src='./img/icon/heart.svg' alt='In favorite button'\r\n                className={style.inFavorite}\r\n                onClick={() => {\r\n                    return (dispatch(removeFromFavoriteList(id)),\r\n                        setType(false))\r\n                }} />\r\n        </button>\r\n        : <button type='button' className={!favoriteBlockStyle ? style.addIconBtn : style.addIconFavoriteBtn}>\r\n            <img src='./img/icon/heart_stroke.svg' alt=\"Add to Favorite Button\"\r\n                className={style.notInFavorite}\r\n                onClick={() => {\r\n                    return (dispatch(addToFavoriteList(categories, icon_url, id, updated_at, url, value)),\r\n                        setType(true))\r\n                }} />\r\n        </button>\r\n}\r\nexport default AddToFavoriteButton;\r\n","import style from './JokeBlockItem.module.scss'\r\nimport AddToFavoriteButton from '../AddToFavoriteButton';\r\n\r\nconst countLastUpdate = (date) => {\r\n    const lastUpdate = new Date(`${date.slice(0, 10).replace('-', '/').replace('-', '/')}`);\r\n    const now = new Date();\r\n    const difference = lastUpdate.getTime() - now.getTime();\r\n    const days = Math.abs(difference / (1000 * 3600 * 24));\r\n    return Math.ceil(days);\r\n}\r\n\r\nconst JokeBlockItem = ({ jokeData, favoriteBlockStyle }) => {\r\n    const { categories, icon_url, id, updated_at, url, value, inFavorite } = jokeData;\r\n\r\n    const isCategories = Boolean(categories)\r\n    const isCategoriesLength = isCategories ? categories.length !== 0 ? true : false : null;\r\n\r\n    return (\r\n        <div className={favoriteBlockStyle === undefined ? style.jokeBlockItem : style.jokeBlockFavoriteItem}>\r\n            <div className={style.icon}>\r\n                <img src={icon_url} alt=\"Joke icon\" />\r\n            </div>\r\n            <AddToFavoriteButton categories={categories} icon_url={icon_url} id={id} updated_at={updated_at} url={url}\r\n                value={value} inFavorite={inFavorite} favoriteBlockStyle={favoriteBlockStyle} />\r\n            <div className={style.data}>\r\n                <div className={style.idBlock}>\r\n                    <p className={style.id}>ID:</p>\r\n                    <a href={url} className={style.linkText}>{id}\r\n                        <img src=\"./img/icon/external-link.svg\" className={style.linkIcon} alt=\"Icon external link\" />\r\n                    </a>\r\n                </div>\r\n                <p className={style.text}>{value}</p>\r\n                <div className={style.jokeFooter}>\r\n                    {updated_at !== undefined ? <p className={style.lastUpdate}>Last update: {countLastUpdate(updated_at)} days ago.</p> : null}\r\n                    {isCategoriesLength ? <p className={style.categories}>{categories}</p> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JokeBlockItem;","import JokeBlockItem from './JokeBlockItem';\r\n\r\nexport default JokeBlockItem;","import MainJokesBlock from './MainJokesBlock';\r\n\r\nexport default MainJokesBlock;","import JokeBlockItem from '../JokeBlockItem';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MainJokesBlock = () => {\r\n    const jokeList = useSelector(state => state.chuckApi.jokeList);\r\n    const isJokeList = Boolean(jokeList);\r\n    return (\r\n        <div>\r\n            {isJokeList ? jokeList.map((jokeData, key) => {\r\n                return (\r\n                    <JokeBlockItem jokeData={jokeData} key={key} />\r\n                )\r\n            }) : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainJokesBlock;","import Main from './Main';\r\n\r\nexport default Main;","import './Main.css'\r\nimport RadioGroup from '../RadioGroup';\r\nimport MainHeader from '../MainHeader';\r\nimport MainButton from '../MainButton';\r\nimport MainJokesBlock from '../MainJokesBlock';\r\n\r\nconst Main = () => {\r\n    return <main>\r\n        <MainHeader />\r\n        <RadioGroup />\r\n        <MainButton />\r\n        <MainJokesBlock />\r\n    </main>\r\n}\r\n\r\nexport default Main;","import FavoriteHeaderDesktop from './FavoriteHeaderDesktop';\r\n\r\nexport default FavoriteHeaderDesktop;","import './FavoriteHeaderDesktop.css'\r\n\r\nconst FavoriteHeaderDesktop = () => {\r\n    return < div className='favoriteHeaderDesktop' >\r\n        <p className='favoriteHeaderText'>Favorite</p>\r\n    </ div>\r\n}\r\n\r\nexport default FavoriteHeaderDesktop;","import FavoriteHeaderTablet from './FavoriteHeaderTablet';\r\n\r\nexport default FavoriteHeaderTablet;","import './FavoriteHeaderTablet.css'\r\nimport { setFavoriteListState } from '../../store/chuckApi/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst FavoriteHeaderTablet = () => {\r\n    const dispatch = useDispatch();\r\n    const favoriteListStateBtn = useSelector(state => state.chuckApi.favoriteListStateBtn);\r\n\r\n    const isOpenFavoriteList = favoriteListStateBtn === true;\r\n    const isClosedFavoriteList = favoriteListStateBtn === false;\r\n    \r\n    return  <div className={`${'favoriteHeaderTablet'} ${isOpenFavoriteList ? 'favoriteHeaderTabletActive' : ''}`} >\r\n    <button className='favoriteBtn'\r\n        onClick={() => {\r\n            return isClosedFavoriteList ?\r\n                dispatch(setFavoriteListState(true)) :\r\n                dispatch(setFavoriteListState(false))\r\n        }}>\r\n        <img src={isClosedFavoriteList ?\r\n            './img/icon/burgerMenu.svg' :\r\n            './img/icon/burgerMenuClose.svg'} alt=\"Burger menu button\" />\r\n    </button>\r\n    <p className='favoriteHeaderText'>Favorite</p>\r\n</div>\r\n}\r\n\r\nexport default FavoriteHeaderTablet;","import FavoriteHeader from './FavoriteHeader';\r\n\r\nexport default FavoriteHeader;","import { useSelector } from 'react-redux';\r\nimport FavoriteHeaderDesktop from '../FavoriteHeaderDesktop';\r\nimport FavoriteHeaderTablet from '../FavoriteHeaderTablet';\r\nconst FavoriteHeader = ({ screenType }) => {\r\n    const favoriteJokeList = useSelector(state => state.chuckApi.favoriteJokeList);\r\n    const isExistFavoriteList = Boolean(favoriteJokeList.length) === true;\r\n\r\n    return isExistFavoriteList ? screenType === 'desktop' ?\r\n        <FavoriteHeaderDesktop />\r\n        :\r\n        <FavoriteHeaderTablet />\r\n        : null\r\n}\r\n\r\nexport default FavoriteHeader; ","import FavoriteBlock from './FavoriteBlock';\r\n\r\nexport default FavoriteBlock;","import './FavoriteBlock.css';\r\nimport { useSelector } from 'react-redux';\r\nimport FavoriteHeader from '../FavoriteHeader';\r\nimport JokeBlockItem from '../JokeBlockItem';\r\n\r\nconst FavoriteBlock = ({ screenType, favoriteJokeList }) => {\r\n    const favoriteListStateBtn = useSelector(state => state.chuckApi.favoriteListStateBtn);\r\n    const isDesktop = screenType === 'desktop' ? true : false;\r\n\r\n    const favoriteTabletClass = favoriteListStateBtn === false ? 'favoriteBlockClosed' : 'favoriteBlockOpened';\r\n    const favoriteContainerClass = isDesktop ? 'favoriteContainerDesktop' : `${'favoriteContainerTablet'} ${favoriteTabletClass}`;\r\n    const favoriteJokeBlockClass = isDesktop ? 'favoriteJokeBlock' : 'favoriteBlockTablet'\r\n\r\n    return <aside className={favoriteContainerClass}>\r\n        {isDesktop ? <FavoriteHeader screenType='desktop' /> : null}\r\n        <div className={favoriteJokeBlockClass}>\r\n            {favoriteJokeList.map((jokeData, key) => {\r\n                return (\r\n                    <JokeBlockItem jokeData={jokeData} key={key} favoriteBlockStyle={true} />\r\n                )\r\n            })}\r\n        </div>\r\n    </aside>\r\n\r\n}\r\n\r\nexport default FavoriteBlock;","import { useEffect } from 'react';\r\nimport FavoriteHeader from '../FavoriteHeader';\r\nimport FavoriteBlock from '../FavoriteBlock';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setFavoriteJokeList } from '../../store/chuckApi/actions';\r\n\r\nconst initialSetOnlyInFavoriteItem = () => {\r\n    let initial = false;\r\n    const localStorageFavoriteListJson = JSON.parse(window.localStorage.getItem('favoriteList'))\r\n\r\n    return localStorageFavoriteListJson !== null && initial === false ? (\r\n        initial = true,\r\n        localStorageFavoriteListJson.filter((item) => item.inFavorite === true))\r\n        : [];\r\n};\r\n\r\nconst Favorite = () => {\r\n    const dispatch = useDispatch();\r\n    const favoriteJokeList = useSelector(state => state.chuckApi.favoriteJokeList);\r\n\r\n    const isFavoriteList = Boolean(favoriteJokeList.length)\r\n    console.log(isFavoriteList);\r\n\r\n    useEffect(() => {\r\n        const cleanLocalStorageFavoriteList = initialSetOnlyInFavoriteItem()\r\n        const cleanFavoriteList = cleanLocalStorageFavoriteList !== undefined ? initialSetOnlyInFavoriteItem() : [];\r\n        dispatch(setFavoriteJokeList(cleanFavoriteList))\r\n    }, [dispatch])\r\n\r\n\r\n    return (isFavoriteList === true ?\r\n        <>\r\n            <FavoriteHeader screenType='tablet' />\r\n            <FavoriteBlock screenType='desktop' favoriteJokeList={favoriteJokeList} />\r\n            <FavoriteBlock screenType='tablet' favoriteJokeList={favoriteJokeList} />\r\n        </>\r\n        : null\r\n\r\n    )\r\n}\r\n\r\nexport default Favorite;","import Favorite from './Favorite';\r\n\r\nexport default Favorite;","import Main from './components/Main'\r\nimport Favorite from './components/Favorite'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Main />\r\n      <Favorite />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}